//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ValenciaSustainability {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("TodaysAuditReportsDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class TodaysAuditReportsDataSet : global::System.Data.DataSet {
        
        private AuditDataTable tableAudit;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public TodaysAuditReportsDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected TodaysAuditReportsDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Audit"] != null)) {
                    base.Tables.Add(new AuditDataTable(ds.Tables["Audit"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AuditDataTable Audit {
            get {
                return this.tableAudit;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            TodaysAuditReportsDataSet cln = ((TodaysAuditReportsDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Audit"] != null)) {
                    base.Tables.Add(new AuditDataTable(ds.Tables["Audit"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableAudit = ((AuditDataTable)(base.Tables["Audit"]));
            if ((initTable == true)) {
                if ((this.tableAudit != null)) {
                    this.tableAudit.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "TodaysAuditReportsDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/TodaysAuditReportsDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAudit = new AuditDataTable();
            base.Tables.Add(this.tableAudit);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeAudit() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            TodaysAuditReportsDataSet ds = new TodaysAuditReportsDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void AuditRowChangeEventHandler(object sender, AuditRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AuditDataTable : global::System.Data.TypedTableBase<AuditRow> {
            
            private global::System.Data.DataColumn columnAuditDate;
            
            private global::System.Data.DataColumn columnAuditName;
            
            private global::System.Data.DataColumn columnCampusName;
            
            private global::System.Data.DataColumn columnBuildingName;
            
            private global::System.Data.DataColumn columnRoomName;
            
            private global::System.Data.DataColumn columnLotName;
            
            private global::System.Data.DataColumn columnFilter;
            
            private global::System.Data.DataColumn columnAHUWaterLeak;
            
            private global::System.Data.DataColumn columnAirLeak;
            
            private global::System.Data.DataColumn columnNoise;
            
            private global::System.Data.DataColumn columnVFD;
            
            private global::System.Data.DataColumn columnInHand;
            
            private global::System.Data.DataColumn columnError;
            
            private global::System.Data.DataColumn columnAHUOther;
            
            private global::System.Data.DataColumn columnComputersOn;
            
            private global::System.Data.DataColumn columnTvsOn;
            
            private global::System.Data.DataColumn columnProjectorsOn;
            
            private global::System.Data.DataColumn columnLabLightsOn;
            
            private global::System.Data.DataColumn columnLabOther;
            
            private global::System.Data.DataColumn columnHeadAdjustment;
            
            private global::System.Data.DataColumn columnBrokenHead;
            
            private global::System.Data.DataColumn columnIrrigationOnDayTime;
            
            private global::System.Data.DataColumn columnIrrigationOnNightTime;
            
            private global::System.Data.DataColumn columnManualOverride;
            
            private global::System.Data.DataColumn columnIrrigationWaterLeak;
            
            private global::System.Data.DataColumn columnIrrigationOther;
            
            private global::System.Data.DataColumn columnSecurityMode;
            
            private global::System.Data.DataColumn columnLocked;
            
            private global::System.Data.DataColumn columnLightsOnDayTime;
            
            private global::System.Data.DataColumn columnLightsOnNightTime;
            
            private global::System.Data.DataColumn columnBrokenBulb;
            
            private global::System.Data.DataColumn columnParkingLightsOther;
            
            private global::System.Data.DataColumn columnTempTooCold;
            
            private global::System.Data.DataColumn columnTempTooHot;
            
            private global::System.Data.DataColumn columnThermostatBroken;
            
            private global::System.Data.DataColumn columnTempOther;
            
            private global::System.Data.DataColumn columnMarqueeOnDayTime;
            
            private global::System.Data.DataColumn columnMarqueeOnNightTime;
            
            private global::System.Data.DataColumn columnBrokenPixels;
            
            private global::System.Data.DataColumn columnMarqueeOther;
            
            private global::System.Data.DataColumn columnWaterRunning;
            
            private global::System.Data.DataColumn columnKitchenWaterLeak;
            
            private global::System.Data.DataColumn columnKitchenLightsOn;
            
            private global::System.Data.DataColumn columnFridgeOpen;
            
            private global::System.Data.DataColumn columnFreezerOpen;
            
            private global::System.Data.DataColumn columnKitchenOther;
            
            private global::System.Data.DataColumn columnNumberComputersOn;
            
            private global::System.Data.DataColumn columnNumberTvsOn;
            
            private global::System.Data.DataColumn columnNumberProjectorsOn;
            
            private global::System.Data.DataColumn columnNumberLightsOn;
            
            private global::System.Data.DataColumn columnEnergyUsed;
            
            private global::System.Data.DataColumn columnAHUNotes;
            
            private global::System.Data.DataColumn columnComputerLabNotes;
            
            private global::System.Data.DataColumn columnTemperatureNotes;
            
            private global::System.Data.DataColumn columnKitchenNotes;
            
            private global::System.Data.DataColumn columnParkingLightsNotes;
            
            private global::System.Data.DataColumn columnMarqueeNotes;
            
            private global::System.Data.DataColumn columnIrrigationNotes;
            
            private global::System.Data.DataColumn columnOtherNotes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public AuditDataTable() {
                this.TableName = "Audit";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal AuditDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected AuditDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AuditDateColumn {
                get {
                    return this.columnAuditDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AuditNameColumn {
                get {
                    return this.columnAuditName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CampusNameColumn {
                get {
                    return this.columnCampusName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BuildingNameColumn {
                get {
                    return this.columnBuildingName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RoomNameColumn {
                get {
                    return this.columnRoomName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LotNameColumn {
                get {
                    return this.columnLotName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FilterColumn {
                get {
                    return this.columnFilter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AHUWaterLeakColumn {
                get {
                    return this.columnAHUWaterLeak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AirLeakColumn {
                get {
                    return this.columnAirLeak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NoiseColumn {
                get {
                    return this.columnNoise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn VFDColumn {
                get {
                    return this.columnVFD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InHandColumn {
                get {
                    return this.columnInHand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ErrorColumn {
                get {
                    return this.columnError;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AHUOtherColumn {
                get {
                    return this.columnAHUOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ComputersOnColumn {
                get {
                    return this.columnComputersOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TvsOnColumn {
                get {
                    return this.columnTvsOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ProjectorsOnColumn {
                get {
                    return this.columnProjectorsOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LabLightsOnColumn {
                get {
                    return this.columnLabLightsOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LabOtherColumn {
                get {
                    return this.columnLabOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HeadAdjustmentColumn {
                get {
                    return this.columnHeadAdjustment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BrokenHeadColumn {
                get {
                    return this.columnBrokenHead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IrrigationOnDayTimeColumn {
                get {
                    return this.columnIrrigationOnDayTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IrrigationOnNightTimeColumn {
                get {
                    return this.columnIrrigationOnNightTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ManualOverrideColumn {
                get {
                    return this.columnManualOverride;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IrrigationWaterLeakColumn {
                get {
                    return this.columnIrrigationWaterLeak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IrrigationOtherColumn {
                get {
                    return this.columnIrrigationOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SecurityModeColumn {
                get {
                    return this.columnSecurityMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LockedColumn {
                get {
                    return this.columnLocked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LightsOnDayTimeColumn {
                get {
                    return this.columnLightsOnDayTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LightsOnNightTimeColumn {
                get {
                    return this.columnLightsOnNightTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BrokenBulbColumn {
                get {
                    return this.columnBrokenBulb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ParkingLightsOtherColumn {
                get {
                    return this.columnParkingLightsOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TempTooColdColumn {
                get {
                    return this.columnTempTooCold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TempTooHotColumn {
                get {
                    return this.columnTempTooHot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ThermostatBrokenColumn {
                get {
                    return this.columnThermostatBroken;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TempOtherColumn {
                get {
                    return this.columnTempOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MarqueeOnDayTimeColumn {
                get {
                    return this.columnMarqueeOnDayTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MarqueeOnNightTimeColumn {
                get {
                    return this.columnMarqueeOnNightTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BrokenPixelsColumn {
                get {
                    return this.columnBrokenPixels;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MarqueeOtherColumn {
                get {
                    return this.columnMarqueeOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WaterRunningColumn {
                get {
                    return this.columnWaterRunning;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KitchenWaterLeakColumn {
                get {
                    return this.columnKitchenWaterLeak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KitchenLightsOnColumn {
                get {
                    return this.columnKitchenLightsOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FridgeOpenColumn {
                get {
                    return this.columnFridgeOpen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FreezerOpenColumn {
                get {
                    return this.columnFreezerOpen;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KitchenOtherColumn {
                get {
                    return this.columnKitchenOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NumberComputersOnColumn {
                get {
                    return this.columnNumberComputersOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NumberTvsOnColumn {
                get {
                    return this.columnNumberTvsOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NumberProjectorsOnColumn {
                get {
                    return this.columnNumberProjectorsOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NumberLightsOnColumn {
                get {
                    return this.columnNumberLightsOn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EnergyUsedColumn {
                get {
                    return this.columnEnergyUsed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AHUNotesColumn {
                get {
                    return this.columnAHUNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ComputerLabNotesColumn {
                get {
                    return this.columnComputerLabNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TemperatureNotesColumn {
                get {
                    return this.columnTemperatureNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KitchenNotesColumn {
                get {
                    return this.columnKitchenNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ParkingLightsNotesColumn {
                get {
                    return this.columnParkingLightsNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn MarqueeNotesColumn {
                get {
                    return this.columnMarqueeNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IrrigationNotesColumn {
                get {
                    return this.columnIrrigationNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OtherNotesColumn {
                get {
                    return this.columnOtherNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public AuditRow this[int index] {
                get {
                    return ((AuditRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event AuditRowChangeEventHandler AuditRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event AuditRowChangeEventHandler AuditRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event AuditRowChangeEventHandler AuditRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event AuditRowChangeEventHandler AuditRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddAuditRow(AuditRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public AuditRow AddAuditRow(
                        System.DateTime AuditDate, 
                        string AuditName, 
                        string CampusName, 
                        string BuildingName, 
                        string RoomName, 
                        string LotName, 
                        bool Filter, 
                        bool AHUWaterLeak, 
                        bool AirLeak, 
                        bool Noise, 
                        bool VFD, 
                        bool InHand, 
                        bool Error, 
                        bool AHUOther, 
                        bool ComputersOn, 
                        bool TvsOn, 
                        bool ProjectorsOn, 
                        bool LabLightsOn, 
                        bool LabOther, 
                        bool HeadAdjustment, 
                        bool BrokenHead, 
                        bool IrrigationOnDayTime, 
                        bool IrrigationOnNightTime, 
                        bool ManualOverride, 
                        bool IrrigationWaterLeak, 
                        bool IrrigationOther, 
                        bool SecurityMode, 
                        bool Locked, 
                        bool LightsOnDayTime, 
                        bool LightsOnNightTime, 
                        bool BrokenBulb, 
                        bool ParkingLightsOther, 
                        bool TempTooCold, 
                        bool TempTooHot, 
                        bool ThermostatBroken, 
                        bool TempOther, 
                        bool MarqueeOnDayTime, 
                        bool MarqueeOnNightTime, 
                        bool BrokenPixels, 
                        bool MarqueeOther, 
                        bool WaterRunning, 
                        bool KitchenWaterLeak, 
                        bool KitchenLightsOn, 
                        bool FridgeOpen, 
                        bool FreezerOpen, 
                        bool KitchenOther, 
                        int NumberComputersOn, 
                        int NumberTvsOn, 
                        int NumberProjectorsOn, 
                        int NumberLightsOn, 
                        string EnergyUsed, 
                        string AHUNotes, 
                        string ComputerLabNotes, 
                        string TemperatureNotes, 
                        string KitchenNotes, 
                        string ParkingLightsNotes, 
                        string MarqueeNotes, 
                        string IrrigationNotes, 
                        string OtherNotes) {
                AuditRow rowAuditRow = ((AuditRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AuditDate,
                        AuditName,
                        CampusName,
                        BuildingName,
                        RoomName,
                        LotName,
                        Filter,
                        AHUWaterLeak,
                        AirLeak,
                        Noise,
                        VFD,
                        InHand,
                        Error,
                        AHUOther,
                        ComputersOn,
                        TvsOn,
                        ProjectorsOn,
                        LabLightsOn,
                        LabOther,
                        HeadAdjustment,
                        BrokenHead,
                        IrrigationOnDayTime,
                        IrrigationOnNightTime,
                        ManualOverride,
                        IrrigationWaterLeak,
                        IrrigationOther,
                        SecurityMode,
                        Locked,
                        LightsOnDayTime,
                        LightsOnNightTime,
                        BrokenBulb,
                        ParkingLightsOther,
                        TempTooCold,
                        TempTooHot,
                        ThermostatBroken,
                        TempOther,
                        MarqueeOnDayTime,
                        MarqueeOnNightTime,
                        BrokenPixels,
                        MarqueeOther,
                        WaterRunning,
                        KitchenWaterLeak,
                        KitchenLightsOn,
                        FridgeOpen,
                        FreezerOpen,
                        KitchenOther,
                        NumberComputersOn,
                        NumberTvsOn,
                        NumberProjectorsOn,
                        NumberLightsOn,
                        EnergyUsed,
                        AHUNotes,
                        ComputerLabNotes,
                        TemperatureNotes,
                        KitchenNotes,
                        ParkingLightsNotes,
                        MarqueeNotes,
                        IrrigationNotes,
                        OtherNotes};
                rowAuditRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAuditRow);
                return rowAuditRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AuditDataTable cln = ((AuditDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AuditDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnAuditDate = base.Columns["AuditDate"];
                this.columnAuditName = base.Columns["AuditName"];
                this.columnCampusName = base.Columns["CampusName"];
                this.columnBuildingName = base.Columns["BuildingName"];
                this.columnRoomName = base.Columns["RoomName"];
                this.columnLotName = base.Columns["LotName"];
                this.columnFilter = base.Columns["Filter"];
                this.columnAHUWaterLeak = base.Columns["AHUWaterLeak"];
                this.columnAirLeak = base.Columns["AirLeak"];
                this.columnNoise = base.Columns["Noise"];
                this.columnVFD = base.Columns["VFD"];
                this.columnInHand = base.Columns["InHand"];
                this.columnError = base.Columns["Error"];
                this.columnAHUOther = base.Columns["AHUOther"];
                this.columnComputersOn = base.Columns["ComputersOn"];
                this.columnTvsOn = base.Columns["TvsOn"];
                this.columnProjectorsOn = base.Columns["ProjectorsOn"];
                this.columnLabLightsOn = base.Columns["LabLightsOn"];
                this.columnLabOther = base.Columns["LabOther"];
                this.columnHeadAdjustment = base.Columns["HeadAdjustment"];
                this.columnBrokenHead = base.Columns["BrokenHead"];
                this.columnIrrigationOnDayTime = base.Columns["IrrigationOnDayTime"];
                this.columnIrrigationOnNightTime = base.Columns["IrrigationOnNightTime"];
                this.columnManualOverride = base.Columns["ManualOverride"];
                this.columnIrrigationWaterLeak = base.Columns["IrrigationWaterLeak"];
                this.columnIrrigationOther = base.Columns["IrrigationOther"];
                this.columnSecurityMode = base.Columns["SecurityMode"];
                this.columnLocked = base.Columns["Locked"];
                this.columnLightsOnDayTime = base.Columns["LightsOnDayTime"];
                this.columnLightsOnNightTime = base.Columns["LightsOnNightTime"];
                this.columnBrokenBulb = base.Columns["BrokenBulb"];
                this.columnParkingLightsOther = base.Columns["ParkingLightsOther"];
                this.columnTempTooCold = base.Columns["TempTooCold"];
                this.columnTempTooHot = base.Columns["TempTooHot"];
                this.columnThermostatBroken = base.Columns["ThermostatBroken"];
                this.columnTempOther = base.Columns["TempOther"];
                this.columnMarqueeOnDayTime = base.Columns["MarqueeOnDayTime"];
                this.columnMarqueeOnNightTime = base.Columns["MarqueeOnNightTime"];
                this.columnBrokenPixels = base.Columns["BrokenPixels"];
                this.columnMarqueeOther = base.Columns["MarqueeOther"];
                this.columnWaterRunning = base.Columns["WaterRunning"];
                this.columnKitchenWaterLeak = base.Columns["KitchenWaterLeak"];
                this.columnKitchenLightsOn = base.Columns["KitchenLightsOn"];
                this.columnFridgeOpen = base.Columns["FridgeOpen"];
                this.columnFreezerOpen = base.Columns["FreezerOpen"];
                this.columnKitchenOther = base.Columns["KitchenOther"];
                this.columnNumberComputersOn = base.Columns["NumberComputersOn"];
                this.columnNumberTvsOn = base.Columns["NumberTvsOn"];
                this.columnNumberProjectorsOn = base.Columns["NumberProjectorsOn"];
                this.columnNumberLightsOn = base.Columns["NumberLightsOn"];
                this.columnEnergyUsed = base.Columns["EnergyUsed"];
                this.columnAHUNotes = base.Columns["AHUNotes"];
                this.columnComputerLabNotes = base.Columns["ComputerLabNotes"];
                this.columnTemperatureNotes = base.Columns["TemperatureNotes"];
                this.columnKitchenNotes = base.Columns["KitchenNotes"];
                this.columnParkingLightsNotes = base.Columns["ParkingLightsNotes"];
                this.columnMarqueeNotes = base.Columns["MarqueeNotes"];
                this.columnIrrigationNotes = base.Columns["IrrigationNotes"];
                this.columnOtherNotes = base.Columns["OtherNotes"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnAuditDate = new global::System.Data.DataColumn("AuditDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuditDate);
                this.columnAuditName = new global::System.Data.DataColumn("AuditName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuditName);
                this.columnCampusName = new global::System.Data.DataColumn("CampusName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCampusName);
                this.columnBuildingName = new global::System.Data.DataColumn("BuildingName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuildingName);
                this.columnRoomName = new global::System.Data.DataColumn("RoomName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoomName);
                this.columnLotName = new global::System.Data.DataColumn("LotName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLotName);
                this.columnFilter = new global::System.Data.DataColumn("Filter", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFilter);
                this.columnAHUWaterLeak = new global::System.Data.DataColumn("AHUWaterLeak", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAHUWaterLeak);
                this.columnAirLeak = new global::System.Data.DataColumn("AirLeak", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAirLeak);
                this.columnNoise = new global::System.Data.DataColumn("Noise", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoise);
                this.columnVFD = new global::System.Data.DataColumn("VFD", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVFD);
                this.columnInHand = new global::System.Data.DataColumn("InHand", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInHand);
                this.columnError = new global::System.Data.DataColumn("Error", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnError);
                this.columnAHUOther = new global::System.Data.DataColumn("AHUOther", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAHUOther);
                this.columnComputersOn = new global::System.Data.DataColumn("ComputersOn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComputersOn);
                this.columnTvsOn = new global::System.Data.DataColumn("TvsOn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTvsOn);
                this.columnProjectorsOn = new global::System.Data.DataColumn("ProjectorsOn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectorsOn);
                this.columnLabLightsOn = new global::System.Data.DataColumn("LabLightsOn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabLightsOn);
                this.columnLabOther = new global::System.Data.DataColumn("LabOther", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabOther);
                this.columnHeadAdjustment = new global::System.Data.DataColumn("HeadAdjustment", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeadAdjustment);
                this.columnBrokenHead = new global::System.Data.DataColumn("BrokenHead", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrokenHead);
                this.columnIrrigationOnDayTime = new global::System.Data.DataColumn("IrrigationOnDayTime", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIrrigationOnDayTime);
                this.columnIrrigationOnNightTime = new global::System.Data.DataColumn("IrrigationOnNightTime", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIrrigationOnNightTime);
                this.columnManualOverride = new global::System.Data.DataColumn("ManualOverride", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManualOverride);
                this.columnIrrigationWaterLeak = new global::System.Data.DataColumn("IrrigationWaterLeak", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIrrigationWaterLeak);
                this.columnIrrigationOther = new global::System.Data.DataColumn("IrrigationOther", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIrrigationOther);
                this.columnSecurityMode = new global::System.Data.DataColumn("SecurityMode", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecurityMode);
                this.columnLocked = new global::System.Data.DataColumn("Locked", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocked);
                this.columnLightsOnDayTime = new global::System.Data.DataColumn("LightsOnDayTime", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLightsOnDayTime);
                this.columnLightsOnNightTime = new global::System.Data.DataColumn("LightsOnNightTime", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLightsOnNightTime);
                this.columnBrokenBulb = new global::System.Data.DataColumn("BrokenBulb", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrokenBulb);
                this.columnParkingLightsOther = new global::System.Data.DataColumn("ParkingLightsOther", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParkingLightsOther);
                this.columnTempTooCold = new global::System.Data.DataColumn("TempTooCold", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTempTooCold);
                this.columnTempTooHot = new global::System.Data.DataColumn("TempTooHot", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTempTooHot);
                this.columnThermostatBroken = new global::System.Data.DataColumn("ThermostatBroken", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThermostatBroken);
                this.columnTempOther = new global::System.Data.DataColumn("TempOther", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTempOther);
                this.columnMarqueeOnDayTime = new global::System.Data.DataColumn("MarqueeOnDayTime", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarqueeOnDayTime);
                this.columnMarqueeOnNightTime = new global::System.Data.DataColumn("MarqueeOnNightTime", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarqueeOnNightTime);
                this.columnBrokenPixels = new global::System.Data.DataColumn("BrokenPixels", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrokenPixels);
                this.columnMarqueeOther = new global::System.Data.DataColumn("MarqueeOther", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarqueeOther);
                this.columnWaterRunning = new global::System.Data.DataColumn("WaterRunning", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaterRunning);
                this.columnKitchenWaterLeak = new global::System.Data.DataColumn("KitchenWaterLeak", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKitchenWaterLeak);
                this.columnKitchenLightsOn = new global::System.Data.DataColumn("KitchenLightsOn", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKitchenLightsOn);
                this.columnFridgeOpen = new global::System.Data.DataColumn("FridgeOpen", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFridgeOpen);
                this.columnFreezerOpen = new global::System.Data.DataColumn("FreezerOpen", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFreezerOpen);
                this.columnKitchenOther = new global::System.Data.DataColumn("KitchenOther", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKitchenOther);
                this.columnNumberComputersOn = new global::System.Data.DataColumn("NumberComputersOn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberComputersOn);
                this.columnNumberTvsOn = new global::System.Data.DataColumn("NumberTvsOn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberTvsOn);
                this.columnNumberProjectorsOn = new global::System.Data.DataColumn("NumberProjectorsOn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberProjectorsOn);
                this.columnNumberLightsOn = new global::System.Data.DataColumn("NumberLightsOn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberLightsOn);
                this.columnEnergyUsed = new global::System.Data.DataColumn("EnergyUsed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnergyUsed);
                this.columnAHUNotes = new global::System.Data.DataColumn("AHUNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAHUNotes);
                this.columnComputerLabNotes = new global::System.Data.DataColumn("ComputerLabNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComputerLabNotes);
                this.columnTemperatureNotes = new global::System.Data.DataColumn("TemperatureNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemperatureNotes);
                this.columnKitchenNotes = new global::System.Data.DataColumn("KitchenNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKitchenNotes);
                this.columnParkingLightsNotes = new global::System.Data.DataColumn("ParkingLightsNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParkingLightsNotes);
                this.columnMarqueeNotes = new global::System.Data.DataColumn("MarqueeNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarqueeNotes);
                this.columnIrrigationNotes = new global::System.Data.DataColumn("IrrigationNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIrrigationNotes);
                this.columnOtherNotes = new global::System.Data.DataColumn("OtherNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherNotes);
                this.columnAuditName.MaxLength = 50;
                this.columnCampusName.MaxLength = 50;
                this.columnBuildingName.MaxLength = 50;
                this.columnRoomName.MaxLength = 50;
                this.columnLotName.MaxLength = 50;
                this.columnEnergyUsed.MaxLength = 50;
                this.columnAHUNotes.MaxLength = 2000;
                this.columnComputerLabNotes.MaxLength = 2000;
                this.columnTemperatureNotes.MaxLength = 2000;
                this.columnKitchenNotes.MaxLength = 2000;
                this.columnParkingLightsNotes.MaxLength = 2000;
                this.columnMarqueeNotes.MaxLength = 2000;
                this.columnIrrigationNotes.MaxLength = 2000;
                this.columnOtherNotes.MaxLength = 2000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public AuditRow NewAuditRow() {
                return ((AuditRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AuditRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AuditRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AuditRowChanged != null)) {
                    this.AuditRowChanged(this, new AuditRowChangeEvent(((AuditRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AuditRowChanging != null)) {
                    this.AuditRowChanging(this, new AuditRowChangeEvent(((AuditRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AuditRowDeleted != null)) {
                    this.AuditRowDeleted(this, new AuditRowChangeEvent(((AuditRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AuditRowDeleting != null)) {
                    this.AuditRowDeleting(this, new AuditRowChangeEvent(((AuditRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveAuditRow(AuditRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TodaysAuditReportsDataSet ds = new TodaysAuditReportsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AuditDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AuditRow : global::System.Data.DataRow {
            
            private AuditDataTable tableAudit;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal AuditRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAudit = ((AuditDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime AuditDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAudit.AuditDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AuditDate\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.AuditDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string AuditName {
                get {
                    try {
                        return ((string)(this[this.tableAudit.AuditNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AuditName\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.AuditNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CampusName {
                get {
                    try {
                        return ((string)(this[this.tableAudit.CampusNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CampusName\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.CampusNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string BuildingName {
                get {
                    try {
                        return ((string)(this[this.tableAudit.BuildingNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuildingName\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.BuildingNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string RoomName {
                get {
                    try {
                        return ((string)(this[this.tableAudit.RoomNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoomName\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.RoomNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LotName {
                get {
                    try {
                        return ((string)(this[this.tableAudit.LotNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LotName\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.LotNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Filter {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.FilterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Filter\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.FilterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool AHUWaterLeak {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.AHUWaterLeakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AHUWaterLeak\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.AHUWaterLeakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool AirLeak {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.AirLeakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AirLeak\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.AirLeakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Noise {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.NoiseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Noise\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.NoiseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool VFD {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.VFDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VFD\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.VFDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool InHand {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.InHandColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InHand\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.InHandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Error {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.ErrorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Error\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.ErrorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool AHUOther {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.AHUOtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AHUOther\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.AHUOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool ComputersOn {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.ComputersOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComputersOn\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.ComputersOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool TvsOn {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.TvsOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TvsOn\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.TvsOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool ProjectorsOn {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.ProjectorsOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProjectorsOn\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.ProjectorsOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool LabLightsOn {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.LabLightsOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabLightsOn\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.LabLightsOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool LabOther {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.LabOtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabOther\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.LabOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool HeadAdjustment {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.HeadAdjustmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeadAdjustment\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.HeadAdjustmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool BrokenHead {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.BrokenHeadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrokenHead\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.BrokenHeadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IrrigationOnDayTime {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.IrrigationOnDayTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IrrigationOnDayTime\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.IrrigationOnDayTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IrrigationOnNightTime {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.IrrigationOnNightTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IrrigationOnNightTime\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.IrrigationOnNightTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool ManualOverride {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.ManualOverrideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManualOverride\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.ManualOverrideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IrrigationWaterLeak {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.IrrigationWaterLeakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IrrigationWaterLeak\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.IrrigationWaterLeakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IrrigationOther {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.IrrigationOtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IrrigationOther\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.IrrigationOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool SecurityMode {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.SecurityModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SecurityMode\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.SecurityModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Locked {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.LockedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Locked\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.LockedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool LightsOnDayTime {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.LightsOnDayTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LightsOnDayTime\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.LightsOnDayTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool LightsOnNightTime {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.LightsOnNightTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LightsOnNightTime\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.LightsOnNightTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool BrokenBulb {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.BrokenBulbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrokenBulb\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.BrokenBulbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool ParkingLightsOther {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.ParkingLightsOtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParkingLightsOther\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.ParkingLightsOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool TempTooCold {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.TempTooColdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TempTooCold\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.TempTooColdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool TempTooHot {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.TempTooHotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TempTooHot\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.TempTooHotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool ThermostatBroken {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.ThermostatBrokenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ThermostatBroken\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.ThermostatBrokenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool TempOther {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.TempOtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TempOther\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.TempOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool MarqueeOnDayTime {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.MarqueeOnDayTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarqueeOnDayTime\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.MarqueeOnDayTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool MarqueeOnNightTime {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.MarqueeOnNightTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarqueeOnNightTime\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.MarqueeOnNightTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool BrokenPixels {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.BrokenPixelsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrokenPixels\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.BrokenPixelsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool MarqueeOther {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.MarqueeOtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarqueeOther\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.MarqueeOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool WaterRunning {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.WaterRunningColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WaterRunning\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.WaterRunningColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool KitchenWaterLeak {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.KitchenWaterLeakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KitchenWaterLeak\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.KitchenWaterLeakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool KitchenLightsOn {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.KitchenLightsOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KitchenLightsOn\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.KitchenLightsOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool FridgeOpen {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.FridgeOpenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FridgeOpen\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.FridgeOpenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool FreezerOpen {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.FreezerOpenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FreezerOpen\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.FreezerOpenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool KitchenOther {
                get {
                    try {
                        return ((bool)(this[this.tableAudit.KitchenOtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KitchenOther\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.KitchenOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int NumberComputersOn {
                get {
                    try {
                        return ((int)(this[this.tableAudit.NumberComputersOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberComputersOn\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.NumberComputersOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int NumberTvsOn {
                get {
                    try {
                        return ((int)(this[this.tableAudit.NumberTvsOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberTvsOn\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.NumberTvsOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int NumberProjectorsOn {
                get {
                    try {
                        return ((int)(this[this.tableAudit.NumberProjectorsOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberProjectorsOn\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.NumberProjectorsOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int NumberLightsOn {
                get {
                    try {
                        return ((int)(this[this.tableAudit.NumberLightsOnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberLightsOn\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.NumberLightsOnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string EnergyUsed {
                get {
                    try {
                        return ((string)(this[this.tableAudit.EnergyUsedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnergyUsed\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.EnergyUsedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string AHUNotes {
                get {
                    try {
                        return ((string)(this[this.tableAudit.AHUNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AHUNotes\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.AHUNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ComputerLabNotes {
                get {
                    try {
                        return ((string)(this[this.tableAudit.ComputerLabNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComputerLabNotes\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.ComputerLabNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TemperatureNotes {
                get {
                    try {
                        return ((string)(this[this.tableAudit.TemperatureNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TemperatureNotes\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.TemperatureNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string KitchenNotes {
                get {
                    try {
                        return ((string)(this[this.tableAudit.KitchenNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KitchenNotes\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.KitchenNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ParkingLightsNotes {
                get {
                    try {
                        return ((string)(this[this.tableAudit.ParkingLightsNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParkingLightsNotes\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.ParkingLightsNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string MarqueeNotes {
                get {
                    try {
                        return ((string)(this[this.tableAudit.MarqueeNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarqueeNotes\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.MarqueeNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string IrrigationNotes {
                get {
                    try {
                        return ((string)(this[this.tableAudit.IrrigationNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IrrigationNotes\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.IrrigationNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string OtherNotes {
                get {
                    try {
                        return ((string)(this[this.tableAudit.OtherNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherNotes\' in table \'Audit\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAudit.OtherNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAuditDateNull() {
                return this.IsNull(this.tableAudit.AuditDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAuditDateNull() {
                this[this.tableAudit.AuditDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAuditNameNull() {
                return this.IsNull(this.tableAudit.AuditNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAuditNameNull() {
                this[this.tableAudit.AuditNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCampusNameNull() {
                return this.IsNull(this.tableAudit.CampusNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCampusNameNull() {
                this[this.tableAudit.CampusNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBuildingNameNull() {
                return this.IsNull(this.tableAudit.BuildingNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBuildingNameNull() {
                this[this.tableAudit.BuildingNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRoomNameNull() {
                return this.IsNull(this.tableAudit.RoomNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRoomNameNull() {
                this[this.tableAudit.RoomNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLotNameNull() {
                return this.IsNull(this.tableAudit.LotNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLotNameNull() {
                this[this.tableAudit.LotNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFilterNull() {
                return this.IsNull(this.tableAudit.FilterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFilterNull() {
                this[this.tableAudit.FilterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAHUWaterLeakNull() {
                return this.IsNull(this.tableAudit.AHUWaterLeakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAHUWaterLeakNull() {
                this[this.tableAudit.AHUWaterLeakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAirLeakNull() {
                return this.IsNull(this.tableAudit.AirLeakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAirLeakNull() {
                this[this.tableAudit.AirLeakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNoiseNull() {
                return this.IsNull(this.tableAudit.NoiseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNoiseNull() {
                this[this.tableAudit.NoiseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsVFDNull() {
                return this.IsNull(this.tableAudit.VFDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetVFDNull() {
                this[this.tableAudit.VFDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInHandNull() {
                return this.IsNull(this.tableAudit.InHandColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInHandNull() {
                this[this.tableAudit.InHandColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsErrorNull() {
                return this.IsNull(this.tableAudit.ErrorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetErrorNull() {
                this[this.tableAudit.ErrorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAHUOtherNull() {
                return this.IsNull(this.tableAudit.AHUOtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAHUOtherNull() {
                this[this.tableAudit.AHUOtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsComputersOnNull() {
                return this.IsNull(this.tableAudit.ComputersOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetComputersOnNull() {
                this[this.tableAudit.ComputersOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTvsOnNull() {
                return this.IsNull(this.tableAudit.TvsOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTvsOnNull() {
                this[this.tableAudit.TvsOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsProjectorsOnNull() {
                return this.IsNull(this.tableAudit.ProjectorsOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetProjectorsOnNull() {
                this[this.tableAudit.ProjectorsOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLabLightsOnNull() {
                return this.IsNull(this.tableAudit.LabLightsOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLabLightsOnNull() {
                this[this.tableAudit.LabLightsOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLabOtherNull() {
                return this.IsNull(this.tableAudit.LabOtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLabOtherNull() {
                this[this.tableAudit.LabOtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsHeadAdjustmentNull() {
                return this.IsNull(this.tableAudit.HeadAdjustmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetHeadAdjustmentNull() {
                this[this.tableAudit.HeadAdjustmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBrokenHeadNull() {
                return this.IsNull(this.tableAudit.BrokenHeadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBrokenHeadNull() {
                this[this.tableAudit.BrokenHeadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIrrigationOnDayTimeNull() {
                return this.IsNull(this.tableAudit.IrrigationOnDayTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIrrigationOnDayTimeNull() {
                this[this.tableAudit.IrrigationOnDayTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIrrigationOnNightTimeNull() {
                return this.IsNull(this.tableAudit.IrrigationOnNightTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIrrigationOnNightTimeNull() {
                this[this.tableAudit.IrrigationOnNightTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsManualOverrideNull() {
                return this.IsNull(this.tableAudit.ManualOverrideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetManualOverrideNull() {
                this[this.tableAudit.ManualOverrideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIrrigationWaterLeakNull() {
                return this.IsNull(this.tableAudit.IrrigationWaterLeakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIrrigationWaterLeakNull() {
                this[this.tableAudit.IrrigationWaterLeakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIrrigationOtherNull() {
                return this.IsNull(this.tableAudit.IrrigationOtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIrrigationOtherNull() {
                this[this.tableAudit.IrrigationOtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSecurityModeNull() {
                return this.IsNull(this.tableAudit.SecurityModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSecurityModeNull() {
                this[this.tableAudit.SecurityModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLockedNull() {
                return this.IsNull(this.tableAudit.LockedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLockedNull() {
                this[this.tableAudit.LockedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLightsOnDayTimeNull() {
                return this.IsNull(this.tableAudit.LightsOnDayTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLightsOnDayTimeNull() {
                this[this.tableAudit.LightsOnDayTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLightsOnNightTimeNull() {
                return this.IsNull(this.tableAudit.LightsOnNightTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLightsOnNightTimeNull() {
                this[this.tableAudit.LightsOnNightTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBrokenBulbNull() {
                return this.IsNull(this.tableAudit.BrokenBulbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBrokenBulbNull() {
                this[this.tableAudit.BrokenBulbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsParkingLightsOtherNull() {
                return this.IsNull(this.tableAudit.ParkingLightsOtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetParkingLightsOtherNull() {
                this[this.tableAudit.ParkingLightsOtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTempTooColdNull() {
                return this.IsNull(this.tableAudit.TempTooColdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTempTooColdNull() {
                this[this.tableAudit.TempTooColdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTempTooHotNull() {
                return this.IsNull(this.tableAudit.TempTooHotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTempTooHotNull() {
                this[this.tableAudit.TempTooHotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsThermostatBrokenNull() {
                return this.IsNull(this.tableAudit.ThermostatBrokenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetThermostatBrokenNull() {
                this[this.tableAudit.ThermostatBrokenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTempOtherNull() {
                return this.IsNull(this.tableAudit.TempOtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTempOtherNull() {
                this[this.tableAudit.TempOtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMarqueeOnDayTimeNull() {
                return this.IsNull(this.tableAudit.MarqueeOnDayTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMarqueeOnDayTimeNull() {
                this[this.tableAudit.MarqueeOnDayTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMarqueeOnNightTimeNull() {
                return this.IsNull(this.tableAudit.MarqueeOnNightTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMarqueeOnNightTimeNull() {
                this[this.tableAudit.MarqueeOnNightTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsBrokenPixelsNull() {
                return this.IsNull(this.tableAudit.BrokenPixelsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetBrokenPixelsNull() {
                this[this.tableAudit.BrokenPixelsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMarqueeOtherNull() {
                return this.IsNull(this.tableAudit.MarqueeOtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMarqueeOtherNull() {
                this[this.tableAudit.MarqueeOtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsWaterRunningNull() {
                return this.IsNull(this.tableAudit.WaterRunningColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetWaterRunningNull() {
                this[this.tableAudit.WaterRunningColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsKitchenWaterLeakNull() {
                return this.IsNull(this.tableAudit.KitchenWaterLeakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetKitchenWaterLeakNull() {
                this[this.tableAudit.KitchenWaterLeakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsKitchenLightsOnNull() {
                return this.IsNull(this.tableAudit.KitchenLightsOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetKitchenLightsOnNull() {
                this[this.tableAudit.KitchenLightsOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFridgeOpenNull() {
                return this.IsNull(this.tableAudit.FridgeOpenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFridgeOpenNull() {
                this[this.tableAudit.FridgeOpenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFreezerOpenNull() {
                return this.IsNull(this.tableAudit.FreezerOpenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFreezerOpenNull() {
                this[this.tableAudit.FreezerOpenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsKitchenOtherNull() {
                return this.IsNull(this.tableAudit.KitchenOtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetKitchenOtherNull() {
                this[this.tableAudit.KitchenOtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNumberComputersOnNull() {
                return this.IsNull(this.tableAudit.NumberComputersOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNumberComputersOnNull() {
                this[this.tableAudit.NumberComputersOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNumberTvsOnNull() {
                return this.IsNull(this.tableAudit.NumberTvsOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNumberTvsOnNull() {
                this[this.tableAudit.NumberTvsOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNumberProjectorsOnNull() {
                return this.IsNull(this.tableAudit.NumberProjectorsOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNumberProjectorsOnNull() {
                this[this.tableAudit.NumberProjectorsOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNumberLightsOnNull() {
                return this.IsNull(this.tableAudit.NumberLightsOnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNumberLightsOnNull() {
                this[this.tableAudit.NumberLightsOnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEnergyUsedNull() {
                return this.IsNull(this.tableAudit.EnergyUsedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEnergyUsedNull() {
                this[this.tableAudit.EnergyUsedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAHUNotesNull() {
                return this.IsNull(this.tableAudit.AHUNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAHUNotesNull() {
                this[this.tableAudit.AHUNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsComputerLabNotesNull() {
                return this.IsNull(this.tableAudit.ComputerLabNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetComputerLabNotesNull() {
                this[this.tableAudit.ComputerLabNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTemperatureNotesNull() {
                return this.IsNull(this.tableAudit.TemperatureNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTemperatureNotesNull() {
                this[this.tableAudit.TemperatureNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsKitchenNotesNull() {
                return this.IsNull(this.tableAudit.KitchenNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetKitchenNotesNull() {
                this[this.tableAudit.KitchenNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsParkingLightsNotesNull() {
                return this.IsNull(this.tableAudit.ParkingLightsNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetParkingLightsNotesNull() {
                this[this.tableAudit.ParkingLightsNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsMarqueeNotesNull() {
                return this.IsNull(this.tableAudit.MarqueeNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetMarqueeNotesNull() {
                this[this.tableAudit.MarqueeNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIrrigationNotesNull() {
                return this.IsNull(this.tableAudit.IrrigationNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIrrigationNotesNull() {
                this[this.tableAudit.IrrigationNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsOtherNotesNull() {
                return this.IsNull(this.tableAudit.OtherNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetOtherNotesNull() {
                this[this.tableAudit.OtherNotesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class AuditRowChangeEvent : global::System.EventArgs {
            
            private AuditRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public AuditRowChangeEvent(AuditRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public AuditRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ValenciaSustainability.TodaysAuditReportsDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AuditTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public AuditTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Audit";
            tableMapping.ColumnMappings.Add("AuditDate", "AuditDate");
            tableMapping.ColumnMappings.Add("AuditName", "AuditName");
            tableMapping.ColumnMappings.Add("CampusName", "CampusName");
            tableMapping.ColumnMappings.Add("BuildingName", "BuildingName");
            tableMapping.ColumnMappings.Add("RoomName", "RoomName");
            tableMapping.ColumnMappings.Add("LotName", "LotName");
            tableMapping.ColumnMappings.Add("Filter", "Filter");
            tableMapping.ColumnMappings.Add("AHUWaterLeak", "AHUWaterLeak");
            tableMapping.ColumnMappings.Add("AirLeak", "AirLeak");
            tableMapping.ColumnMappings.Add("Noise", "Noise");
            tableMapping.ColumnMappings.Add("VFD", "VFD");
            tableMapping.ColumnMappings.Add("InHand", "InHand");
            tableMapping.ColumnMappings.Add("Error", "Error");
            tableMapping.ColumnMappings.Add("AHUOther", "AHUOther");
            tableMapping.ColumnMappings.Add("ComputersOn", "ComputersOn");
            tableMapping.ColumnMappings.Add("TvsOn", "TvsOn");
            tableMapping.ColumnMappings.Add("ProjectorsOn", "ProjectorsOn");
            tableMapping.ColumnMappings.Add("LabLightsOn", "LabLightsOn");
            tableMapping.ColumnMappings.Add("LabOther", "LabOther");
            tableMapping.ColumnMappings.Add("HeadAdjustment", "HeadAdjustment");
            tableMapping.ColumnMappings.Add("BrokenHead", "BrokenHead");
            tableMapping.ColumnMappings.Add("IrrigationOnDayTime", "IrrigationOnDayTime");
            tableMapping.ColumnMappings.Add("IrrigationOnNightTime", "IrrigationOnNightTime");
            tableMapping.ColumnMappings.Add("ManualOverride", "ManualOverride");
            tableMapping.ColumnMappings.Add("IrrigationWaterLeak", "IrrigationWaterLeak");
            tableMapping.ColumnMappings.Add("IrrigationOther", "IrrigationOther");
            tableMapping.ColumnMappings.Add("SecurityMode", "SecurityMode");
            tableMapping.ColumnMappings.Add("Locked", "Locked");
            tableMapping.ColumnMappings.Add("LightsOnDayTime", "LightsOnDayTime");
            tableMapping.ColumnMappings.Add("LightsOnNightTime", "LightsOnNightTime");
            tableMapping.ColumnMappings.Add("BrokenBulb", "BrokenBulb");
            tableMapping.ColumnMappings.Add("ParkingLightsOther", "ParkingLightsOther");
            tableMapping.ColumnMappings.Add("TempTooCold", "TempTooCold");
            tableMapping.ColumnMappings.Add("TempTooHot", "TempTooHot");
            tableMapping.ColumnMappings.Add("ThermostatBroken", "ThermostatBroken");
            tableMapping.ColumnMappings.Add("TempOther", "TempOther");
            tableMapping.ColumnMappings.Add("MarqueeOnDayTime", "MarqueeOnDayTime");
            tableMapping.ColumnMappings.Add("MarqueeOnNightTime", "MarqueeOnNightTime");
            tableMapping.ColumnMappings.Add("BrokenPixels", "BrokenPixels");
            tableMapping.ColumnMappings.Add("MarqueeOther", "MarqueeOther");
            tableMapping.ColumnMappings.Add("WaterRunning", "WaterRunning");
            tableMapping.ColumnMappings.Add("KitchenWaterLeak", "KitchenWaterLeak");
            tableMapping.ColumnMappings.Add("KitchenLightsOn", "KitchenLightsOn");
            tableMapping.ColumnMappings.Add("FridgeOpen", "FridgeOpen");
            tableMapping.ColumnMappings.Add("FreezerOpen", "FreezerOpen");
            tableMapping.ColumnMappings.Add("KitchenOther", "KitchenOther");
            tableMapping.ColumnMappings.Add("NumberComputersOn", "NumberComputersOn");
            tableMapping.ColumnMappings.Add("NumberTvsOn", "NumberTvsOn");
            tableMapping.ColumnMappings.Add("NumberProjectorsOn", "NumberProjectorsOn");
            tableMapping.ColumnMappings.Add("NumberLightsOn", "NumberLightsOn");
            tableMapping.ColumnMappings.Add("EnergyUsed", "EnergyUsed");
            tableMapping.ColumnMappings.Add("AHUNotes", "AHUNotes");
            tableMapping.ColumnMappings.Add("ComputerLabNotes", "ComputerLabNotes");
            tableMapping.ColumnMappings.Add("TemperatureNotes", "TemperatureNotes");
            tableMapping.ColumnMappings.Add("KitchenNotes", "KitchenNotes");
            tableMapping.ColumnMappings.Add("ParkingLightsNotes", "ParkingLightsNotes");
            tableMapping.ColumnMappings.Add("MarqueeNotes", "MarqueeNotes");
            tableMapping.ColumnMappings.Add("IrrigationNotes", "IrrigationNotes");
            tableMapping.ColumnMappings.Add("OtherNotes", "OtherNotes");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["ValenciaLocalDBConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT AuditDate, AuditName, CampusName, BuildingName, RoomName, LotName, Filter, AHUWaterLeak, AirLeak, Noise, VFD, InHand, Error, AHUOther, ComputersOn, TvsOn, ProjectorsOn, LabLightsOn, LabOther, 
HeadAdjustment, BrokenHead, IrrigationOnDayTime, IrrigationOnNightTime, ManualOverride, IrrigationWaterLeak, IrrigationOther, SecurityMode, Locked, LightsOnDayTime, LightsOnNightTime, BrokenBulb, 
                  ParkingLightsOther, TempTooCold, TempTooHot, ThermostatBroken, TempOther, MarqueeOnDayTime, MarqueeOnNightTime, BrokenPixels, MarqueeOther, WaterRunning, KitchenWaterLeak, KitchenLightsOn, 
                  FridgeOpen, FreezerOpen, KitchenOther, NumberComputersOn, NumberTvsOn, NumberProjectorsOn, NumberLightsOn, EnergyUsed, AHUNotes, ComputerLabNotes, TemperatureNotes, KitchenNotes, 
                  ParkingLightsNotes, MarqueeNotes, IrrigationNotes, OtherNotes
FROM     Audit
WHERE  (AuditDate = { fn CURDATE() } )";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(TodaysAuditReportsDataSet.AuditDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TodaysAuditReportsDataSet.AuditDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            TodaysAuditReportsDataSet.AuditDataTable dataTable = new TodaysAuditReportsDataSet.AuditDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(TodaysAuditReportsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(TodaysAuditReportsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(TodaysAuditReportsDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(TodaysAuditReportsDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591